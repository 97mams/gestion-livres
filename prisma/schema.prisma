// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewfeatures = ["referentialActions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id @default(cuid())
  membreId            String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  membre Members @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id            String    @id @default(cuid())
  sessionToken  String    @unique
  userId        String
  expires       DateTime
  membre        Members   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerifivationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Books {
  id            Int @id         @default(autoincrement())
  title         String
  author        String
  types         String
  resume        String
  upvotes       Int            @default(0)
  mockupImages  String
  date_publish  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  emprunt       Emprunts[]
}

model Members {
  id        Int   @id  @default(autoincrement())
  firstName String
  lastName  String
  email     String
  contact   String
  status    Boolean @default(false)
  emprunt   Emprunts[]
}

model Emprunts {
  id        Int   @id  @default(autoincrement())
  book      Books @relation(fields:[bookId], references:[id])
  bookId    Int
  membre    Members @relation(fields:[membreId], references:[id])
  membreId  Int
}
